Guia para fazer o so_long:
Para melhor compreensão, procure pelo autor do guia (user: pzau);

					BIBLEOTECA MINILIBX
Passo 1 - Download
//Vá até o seu intra e faça download da bibleoteca que lhe foi fornecido pela 42;
//Altere o nome da pasta, exemplo:

				"minilibx-linux" -> "minilibx"
				
//Altere o nome de minilibx-linux par minilibx
//Entre na pasta minilibx e dê um make.
OBS: A pasta deve estar no mesmo local onde pretendes criar o seu projecto;



					ABRIR A JANELA
Passo 1 - Crie uma estrutura.

typedef struct s_vars
{
	void	*mlx;
	void	*win;
}	t_vars;

Passo 2 - Criar o main().

int	main(void)
{
	t_vars	vars;

	vars.mlx = mlx_init();
	vars.win = mlx_new_window(vars.mlx, 500, 500, "so_long");
	mlx_loop(vars.mlx);
}

//Apenas isso é o suficiente para abrir a janela. Agora podes abrir o terminal e executar o seguinte comando para abrir a janela:

			-L./minilibx -lmlx_Linux -lXext -lX11 -lm -o so_long



					Criando o mini-basic Makefile

Passo 1 - Abrindo o terminal

//Abra o terminal e digite:
	vim Makefile

Passo 2 - O que colocar no Makefile?

//Após abrir o Makefile, irás digitar o seguinte:

CC = cc

FILE = *.c

my_printf = my_printf/*.c

name = so_long

minilibx = -L./minilibx -lmlx_Linux -lXext -lX11 -lm

all:
	$(CC) $(FILE) $(my_printf) $(minilibx) -o $(name)

clean:
	rm -r $(name)

.PHONE: clean

//Saia e feche o seu Makefile
Agora com seu Makefile criado, poderás compilar de um jeito bem mais facil



					Fechar Janela com evento de botao

Passo 1 - Adicione a funcao de fechar

//Para adicionar o botao de fechar terás de adicionar a funcao no seu main.

int	main(void)
{
	t_vars	vars;

	vars.mlx = mlx_init();
	vars.win = mlx_new_window(vars.mlx, 500, 500, "so_long");
	mlx_hook(vars.win, 17, 0, close_x, &vars);
	mlx_loop(vars.mlx);
}

Passo 2 - Criar a funcao que fecha

int	close_x(void *param)
{
	t_vars *vars;

	vars = (t_vars *)param;
	mlx_destroy_window(vars->mlx, vars->win);
	mlx_destroy_display(vars->mlx);
	free(vars->mlx);
	exit(0);
}

Passo 3 - Adicionar tudo no header.h

//No seu terminal crie um arquivo.h, chamado header.h

dentro dele irás adicionar a sua estrutura e a prototipação das sua funcões
exemplo:

#ifndef HEADER_H
# define HEADER_H
# include <stdio.h>
# include <stdlib.h>
# include <fcntl.h>
# include "minilibx/mlx.h"
# include "my_printf/ft_printf.h"

typedef struct s_vars
{
	void	*mlx;
	void	*win;
}	t_vars;


int			close_x(void *param);

#endif




















